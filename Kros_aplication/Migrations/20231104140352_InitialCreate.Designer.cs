// <auto-generated />
using System;
using Kros_aplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kros_aplication.Migrations
{
    [DbContext(typeof(Kros_ZadanieContext))]
    [Migration("20231104140352_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kros_aplication.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdManager")
                        .HasColumnType("int")
                        .HasColumnName("id_manager");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.HasKey("Id");

                    b.HasIndex("IdManager");

                    b.HasIndex("ProjectId");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("Kros_aplication.Models.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FirmId")
                        .HasColumnType("int")
                        .HasColumnName("firm_id");

                    b.Property<int>("IdManager")
                        .HasColumnType("int")
                        .HasColumnName("id_manager");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("FirmId");

                    b.HasIndex("IdManager");

                    b.ToTable("Division", (string)null);
                });

            modelBuilder.Entity("Kros_aplication.Models.Firm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdManager")
                        .HasColumnType("int")
                        .HasColumnName("id_manager");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("IdManager");

                    b.ToTable("Firm", (string)null);
                });

            modelBuilder.Entity("Kros_aplication.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DivisionId")
                        .HasColumnType("int")
                        .HasColumnName("division_id");

                    b.Property<int>("IdManager")
                        .HasColumnType("int")
                        .HasColumnName("id_manager");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("IdManager");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("Kros_aplication.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Title")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("Worker", (string)null);
                });

            modelBuilder.Entity("Kros_aplication.Models.Department", b =>
                {
                    b.HasOne("Kros_aplication.Models.Worker", "IdManagerNavigation")
                        .WithMany("Departments")
                        .HasForeignKey("IdManager")
                        .IsRequired()
                        .HasConstraintName("R_4");

                    b.HasOne("Kros_aplication.Models.Project", "Project")
                        .WithMany("Departments")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("R_6");

                    b.Navigation("IdManagerNavigation");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kros_aplication.Models.Division", b =>
                {
                    b.HasOne("Kros_aplication.Models.Firm", "Firm")
                        .WithMany("Divisions")
                        .HasForeignKey("FirmId")
                        .IsRequired()
                        .HasConstraintName("R_5");

                    b.HasOne("Kros_aplication.Models.Worker", "IdManagerNavigation")
                        .WithMany("Divisions")
                        .HasForeignKey("IdManager")
                        .IsRequired()
                        .HasConstraintName("R_2");

                    b.Navigation("Firm");

                    b.Navigation("IdManagerNavigation");
                });

            modelBuilder.Entity("Kros_aplication.Models.Firm", b =>
                {
                    b.HasOne("Kros_aplication.Models.Worker", "IdManagerNavigation")
                        .WithMany("Firms")
                        .HasForeignKey("IdManager")
                        .IsRequired()
                        .HasConstraintName("R_1");

                    b.Navigation("IdManagerNavigation");
                });

            modelBuilder.Entity("Kros_aplication.Models.Project", b =>
                {
                    b.HasOne("Kros_aplication.Models.Division", "Division")
                        .WithMany("Projects")
                        .HasForeignKey("DivisionId")
                        .IsRequired()
                        .HasConstraintName("R_7");

                    b.HasOne("Kros_aplication.Models.Worker", "IdManagerNavigation")
                        .WithMany("Projects")
                        .HasForeignKey("IdManager")
                        .IsRequired()
                        .HasConstraintName("R_3");

                    b.Navigation("Division");

                    b.Navigation("IdManagerNavigation");
                });

            modelBuilder.Entity("Kros_aplication.Models.Division", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Kros_aplication.Models.Firm", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("Kros_aplication.Models.Project", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Kros_aplication.Models.Worker", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Divisions");

                    b.Navigation("Firms");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
